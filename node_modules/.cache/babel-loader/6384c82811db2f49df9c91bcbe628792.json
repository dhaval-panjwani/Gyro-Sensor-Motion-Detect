{"ast":null,"code":"var _jsxFileName = \"/home/dhaval_panjwani/Code/ReactJs/motionense/src/MotionGame.js\";\nimport React from 'react';\n\nclass MotionGame extends React.Component {\n  render() {\n    var ball = document.querySelector('.ball');\n    var garden = document.querySelector('.garden');\n    var output = document.querySelector('.output');\n    var maxX = garden.clientWidth - ball.clientWidth;\n    var maxY = garden.clientHeight - ball.clientHeight;\n\n    function handleOrientation(event) {\n      var x = event.beta; // In degree in the range [-180,180]\n\n      var y = event.gamma; // In degree in the range [-90,90]\n\n      output.innerHTML = \"beta : \" + x + \"\\n\";\n      output.innerHTML += \"gamma: \" + y + \"\\n\"; // Because we don't want to have the device upside down\n      // We constrain the x value to the range [-90,90]\n\n      if (x > 90) {\n        x = 90;\n      }\n\n      ;\n\n      if (x < -90) {\n        x = -90;\n      }\n\n      ; // To make computation easier we shift the range of \n      // x and y to [0,180]\n\n      x += 90;\n      y += 90; // 10 is half the size of the ball\n      // It center the positioning point to the center of the ball\n\n      ball.style.top = maxY * y / 180 - 10 + \"px\";\n      ball.style.left = maxX * x / 180 - 10 + \"px\";\n    }\n\n    window.addEventListener('deviceorientation', handleOrientation);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Home\"));\n  }\n\n}\n\nexport default MotionGame;","map":{"version":3,"sources":["/home/dhaval_panjwani/Code/ReactJs/motionense/src/MotionGame.js"],"names":["React","MotionGame","Component","render","ball","document","querySelector","garden","output","maxX","clientWidth","maxY","clientHeight","handleOrientation","event","x","beta","y","gamma","innerHTML","style","top","left","window","addEventListener"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AAEP,QAAIC,IAAI,GAAKC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;AACJ,QAAIC,MAAM,GAAGF,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAb;AACA,QAAIE,MAAM,GAAGH,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAb;AAEA,QAAIG,IAAI,GAAGF,MAAM,CAACG,WAAP,GAAsBN,IAAI,CAACM,WAAtC;AACA,QAAIC,IAAI,GAAGJ,MAAM,CAACK,YAAP,GAAsBR,IAAI,CAACQ,YAAtC;;AAEA,aAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,UAAIC,CAAC,GAAGD,KAAK,CAACE,IAAd,CADgC,CACX;;AACrB,UAAIC,CAAC,GAAGH,KAAK,CAACI,KAAd,CAFgC,CAEX;;AAErBV,MAAAA,MAAM,CAACW,SAAP,GAAoB,YAAYJ,CAAZ,GAAgB,IAApC;AACAP,MAAAA,MAAM,CAACW,SAAP,IAAoB,YAAYF,CAAZ,GAAgB,IAApC,CALgC,CAOhC;AACA;;AACA,UAAIF,CAAC,GAAI,EAAT,EAAa;AAAEA,QAAAA,CAAC,GAAI,EAAL;AAAQ;;AAAA;;AACvB,UAAIA,CAAC,GAAG,CAAC,EAAT,EAAa;AAAEA,QAAAA,CAAC,GAAG,CAAC,EAAL;AAAQ;;AAAA,OAVS,CAYhC;AACA;;AACAA,MAAAA,CAAC,IAAI,EAAL;AACAE,MAAAA,CAAC,IAAI,EAAL,CAfgC,CAiBhC;AACA;;AACAb,MAAAA,IAAI,CAACgB,KAAL,CAAWC,GAAX,GAAmBV,IAAI,GAACM,CAAL,GAAO,GAAP,GAAa,EAAd,GAAoB,IAAtC;AACAb,MAAAA,IAAI,CAACgB,KAAL,CAAWE,IAAX,GAAmBb,IAAI,GAACM,CAAL,GAAO,GAAP,GAAa,EAAd,GAAoB,IAAtC;AACD;;AAEDQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,mBAAxB,EAA6CX,iBAA7C;AAEI,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AAKD;;AAxCsC;;AA0CzC,eAAeZ,UAAf","sourcesContent":["import React from 'react'\nclass MotionGame extends React.Component {\n  render() {\n\n    var ball   = document.querySelector('.ball');\nvar garden = document.querySelector('.garden');\nvar output = document.querySelector('.output');\n\nvar maxX = garden.clientWidth  - ball.clientWidth;\nvar maxY = garden.clientHeight - ball.clientHeight;\n\nfunction handleOrientation(event) {\n  var x = event.beta;  // In degree in the range [-180,180]\n  var y = event.gamma; // In degree in the range [-90,90]\n\n  output.innerHTML  = \"beta : \" + x + \"\\n\";\n  output.innerHTML += \"gamma: \" + y + \"\\n\";\n\n  // Because we don't want to have the device upside down\n  // We constrain the x value to the range [-90,90]\n  if (x >  90) { x =  90};\n  if (x < -90) { x = -90};\n\n  // To make computation easier we shift the range of \n  // x and y to [0,180]\n  x += 90;\n  y += 90;\n\n  // 10 is half the size of the ball\n  // It center the positioning point to the center of the ball\n  ball.style.top  = (maxY*y/180 - 10) + \"px\";\n  ball.style.left = (maxX*x/180 - 10) + \"px\";\n}\n\nwindow.addEventListener('deviceorientation', handleOrientation);\n\n    return (\n      <div>\n        <h1>Home</h1>\n      </div>\n    )\n  }\n}\nexport default MotionGame"]},"metadata":{},"sourceType":"module"}