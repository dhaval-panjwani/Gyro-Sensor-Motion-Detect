{"ast":null,"code":"var _jsxFileName = \"/home/dhaval_panjwani/Code/ReactJs/motionense/src/MotionGame.js\";\nimport React from 'react';\nimport './MotionGame.css';\n\nclass MotionGame extends React.Component {\n  componentDidMount() {\n    window.addEventListener('deviceorientation', deviceOrientationListener); // var ball = document.querySelector('.ball');\n    // var garden = document.querySelector('.garden');\n    // var output = document.querySelector('.output');\n    // // var ball = document.getElementById('ball');\n    // // var garden = document.getElementById('garden');\n    // // var output = document.getElementById('output');\n    // // var ball = document.querySelector('ball');\n    // // var garden = document.querySelector('garden');\n    // // var output = document.querySelector('output');\n    // var maxX = garden.clientWidth - ball.clientWidth;\n    // var maxY = garden.clientHeight - ball.clientHeight;\n    // function handleOrientation(event) {\n    //     var x = event.alpha;  // In degree in the range [-180,180]\n    //     var y = event.beta; // In degree in the range [-90,90]\n    //     output.innerHTML = \"beta : \" + x + \"\\n\";\n    //     output.innerHTML += \"gamma: \" + y + \"\\n\";\n    //     output.innerHTML += \"alpha: \" + event.gamma + \"\\n\";\n    //     output.innerHTML += \"absolute: \" + event.absolute + \"\\n\";\n    //     // var x = event.beta;  // In degree in the range [-180,180]\n    //     // var y = event.gamma; // In degree in the range [-90,90]\n    //     // output.innerHTML = \"beta : \" + x + \"\\n\";\n    //     // output.innerHTML += \"gamma: \" + y + \"\\n\";\n    //     // output.innerHTML += \"alpha: \" + event.alpha + \"\\n\";\n    //     // output.innerHTML += \"absolute: \" + event.absolute + \"\\n\";\n    //     // Because we don't want to have the device upside down\n    //     // We constrain the x value to the range [-90,90]\n    //     if (x > 90) { x = 90 };\n    //     if (x < -90) { x = -90 };\n    //     // To make computation easier we shift the range of \n    //     // x and y to [0,180]\n    //     // x += 90;\n    //     // y += 90;\n    //     // 10 is half the size of the ball\n    //     // It center the positioning point to the center of the ball\n    //     ball.style.top = (maxY * y / 180 - 10) + \"px\";\n    //     ball.style.left = (maxX * x / 180 - 10) + \"px\";\n    // }\n\n    function deviceOrientationListener(event) {\n      var c = document.getElementById(\"myCanvas\");\n      var ctx = c.getContext(\"2d\");\n      ctx.clearRect(0, 0, c.width, c.height);\n      ctx.fillStyle = \"#FF7777\";\n      ctx.font = \"14px Verdana\";\n      var alpha = event.alpha;\n      ctx.fillText(\"Alpha: \" + alpha, 10, 20);\n      ctx.beginPath();\n      ctx.moveTo(180, 75);\n      ctx.lineTo(210, 75);\n      ctx.arc(180, 75, 60, 0, event.alpha * Math.PI / 180);\n      ctx.fill();\n      ctx.fillStyle = \"#FF6600\";\n      ctx.fillText(\"Beta: \" + Math.round(event.beta), 10, 140);\n      ctx.beginPath();\n      ctx.fillRect(180, 150, event.beta, 90);\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Gamma: \" + Math.round(event.gamma), 10, 270);\n      ctx.beginPath();\n      ctx.fillRect(90, 340, 180, event.gamma);\n    }\n  }\n\n  render() {\n    const canvasStyle = {\n      border: \"1px solid #d3d3d3\"\n    };\n    return (\n      /*#__PURE__*/\n      // <div>\n      //     <div>\n      //         <h1>Home</h1>\n      //     </div>\n      //     <div className=\"garden\" id=\"garden\">\n      //         <div className=\"ball\" id=\"ball\"></div>\n      //     </div>\n      //     <pre className=\"output\"></pre>\n      // </div>\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"myCanvas\",\n        width: \"360\",\n        height: \"450\",\n        style: canvasStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"love\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, \"Made with \", /*#__PURE__*/React.createElement(\"i\", {\n        class: \"icon ion-heart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 43\n        }\n      }), \" by Brian Gardner\"))\n    );\n  }\n\n}\n\nexport default MotionGame;","map":{"version":3,"sources":["/home/dhaval_panjwani/Code/ReactJs/motionense/src/MotionGame.js"],"names":["React","MotionGame","Component","componentDidMount","window","addEventListener","deviceOrientationListener","event","c","document","getElementById","ctx","getContext","clearRect","width","height","fillStyle","font","alpha","fillText","beginPath","moveTo","lineTo","arc","Math","PI","fill","round","beta","fillRect","gamma","render","canvasStyle","border"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './MotionGame.css';\nclass MotionGame extends React.Component {\n\n    componentDidMount() {\n        window.addEventListener('deviceorientation', deviceOrientationListener);\n        // var ball = document.querySelector('.ball');\n        // var garden = document.querySelector('.garden');\n        // var output = document.querySelector('.output');\n\n        // // var ball = document.getElementById('ball');\n        // // var garden = document.getElementById('garden');\n        // // var output = document.getElementById('output');\n\n        // // var ball = document.querySelector('ball');\n        // // var garden = document.querySelector('garden');\n        // // var output = document.querySelector('output');\n\n        // var maxX = garden.clientWidth - ball.clientWidth;\n        // var maxY = garden.clientHeight - ball.clientHeight;\n\n        // function handleOrientation(event) {\n\n\n        //     var x = event.alpha;  // In degree in the range [-180,180]\n        //     var y = event.beta; // In degree in the range [-90,90]\n\n        //     output.innerHTML = \"beta : \" + x + \"\\n\";\n        //     output.innerHTML += \"gamma: \" + y + \"\\n\";\n        //     output.innerHTML += \"alpha: \" + event.gamma + \"\\n\";\n        //     output.innerHTML += \"absolute: \" + event.absolute + \"\\n\";\n\n        //     // var x = event.beta;  // In degree in the range [-180,180]\n        //     // var y = event.gamma; // In degree in the range [-90,90]\n\n        //     // output.innerHTML = \"beta : \" + x + \"\\n\";\n        //     // output.innerHTML += \"gamma: \" + y + \"\\n\";\n        //     // output.innerHTML += \"alpha: \" + event.alpha + \"\\n\";\n        //     // output.innerHTML += \"absolute: \" + event.absolute + \"\\n\";\n\n\n        //     // Because we don't want to have the device upside down\n        //     // We constrain the x value to the range [-90,90]\n        //     if (x > 90) { x = 90 };\n        //     if (x < -90) { x = -90 };\n\n        //     // To make computation easier we shift the range of \n        //     // x and y to [0,180]\n        //     // x += 90;\n        //     // y += 90;\n\n        //     // 10 is half the size of the ball\n        //     // It center the positioning point to the center of the ball\n        //     ball.style.top = (maxY * y / 180 - 10) + \"px\";\n        //     ball.style.left = (maxX * x / 180 - 10) + \"px\";\n        // }\n\n        function deviceOrientationListener(event) {\n            var c = document.getElementById(\"myCanvas\");\n            var ctx = c.getContext(\"2d\");\n\n            ctx.clearRect(0, 0, c.width, c.height);\n            ctx.fillStyle = \"#FF7777\";\n            ctx.font = \"14px Verdana\";\n            var alpha = event.alpha;\n            ctx.fillText(\"Alpha: \" + alpha, 10, 20);\n            ctx.beginPath();\n            ctx.moveTo(180, 75);\n            ctx.lineTo(210, 75);\n            ctx.arc(180, 75, 60, 0, event.alpha * Math.PI / 180);\n            ctx.fill();\n\n            ctx.fillStyle = \"#FF6600\";\n            ctx.fillText(\"Beta: \" + Math.round(event.beta), 10, 140);\n            ctx.beginPath();\n            ctx.fillRect(180, 150, event.beta, 90);\n\n            ctx.fillStyle = \"#FF0000\";\n            ctx.fillText(\"Gamma: \" + Math.round(event.gamma), 10, 270);\n            ctx.beginPath();\n            ctx.fillRect(90, 340, 180, event.gamma);\n        }\n\n\n\n    }\n\n\n\n\n    render() {\n\n        const canvasStyle = {\n            border: \"1px solid #d3d3d3\",\n\n        }\n\n        return (\n            // <div>\n            //     <div>\n            //         <h1>Home</h1>\n            //     </div>\n            //     <div className=\"garden\" id=\"garden\">\n            //         <div className=\"ball\" id=\"ball\"></div>\n            //     </div>\n\n            //     <pre className=\"output\"></pre>\n            // </div>\n            <div><canvas id=\"myCanvas\" width=\"360\" height=\"450\" style={canvasStyle}>\n            </canvas>\n                <p class=\"love\">Made with <i class=\"icon ion-heart\"></i> by Brian Gardner</p>\n            </div>\n\n        )\n    }\n}\nexport default MotionGame"]},"metadata":{},"sourceType":"module"}